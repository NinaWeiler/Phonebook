{"version":3,"sources":["services/persons.js","components/components.js","App.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","remove","delete","Notification","message","messageStyle","className","Button","props","onClick","text","Person","person","handleRemove","name","number","Filter","showAll","handleFilter","value","onChange","PersonForm","addName","newName","handleNewName","newNumber","handleNewNumber","onSubmit","type","Persons","contactsToShow","console","log","style","listStyle","padding","map","App","useState","persons","setPersons","setNewName","setNewNumber","setShowAll","setMessage","setMessageStyle","useEffect","initialPersons","catch","error","length","checkDuplicate","updatedPerson","find","p","toLowerCase","window","confirm","changedPerson","returnedPerson","setTimeout","undefined","filter","includes","event","target","preventDefault","personObject","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4d91990.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n  //const nonExisting = {\r\n  //  name: \"Danny\",\r\n  //  number: 999,\r\n  //  id: 90,\r\n  //}\r\n  //return request.then(response => response.data.concat(nonExisting))\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n} \r\n\r\n\r\nconst personService = {getAll, create, update, remove}\r\n\r\n\r\n\r\nexport default personService;","import React from 'react';\nimport '../index.css'\n\nexport const Notification = ({message, messageStyle}) => {\n    if (message === null) {\n        return null\n    }\n    return (\n        <div className={messageStyle}>\n            {message}\n        </div>\n    )\n}\n\nconst Button = (props) => {\n\n    return <button onClick={props.onClick}>{props.text}</button>;\n  };\n  \n  const Person = ({ person, handleRemove }) => {\n    //console.log('Person', person)\n    //console.log(person.id)\n    return <li >{person.name} {person.number} <Button onClick={() => {handleRemove(person.id)}} text=\"delete\"/></li>;\n  };\n  \n export const Filter = ({showAll, handleFilter}) => {\n    return <p>filter shown with <input value={showAll} onChange={handleFilter}/></p>\n  \n  }\n  \n export const PersonForm = ({addName, newName, handleNewName, newNumber, handleNewNumber}) => {\n    return (\n      <form onSubmit={addName}>\n          <div>\n            name: <input value={newName} onChange={handleNewName} />\n          </div>\n          <div>\n            number: <input value={newNumber} onChange={handleNewNumber} />\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n    )\n  }\n  \n export const Persons = ({contactsToShow, handleRemove}) => {\n   console.log('contactstoshow', contactsToShow)\n    return (\n      <ul style={{listStyle:'none', padding:'0px'}}>\n        {contactsToShow.map(person => \n            <Person key={person.id} person={person} handleRemove={handleRemove}/>\n          )}\n        </ul>\n    )\n  }","import React, { useState, useEffect } from \"react\";\nimport personService from './services/persons';\nimport {Filter, PersonForm, Persons, Notification} from './components/components';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState('');\n  const [showAll, setShowAll] = useState('');\n  const [message, setMessage] = useState(null);\n  const [messageStyle, setMessageStyle] = useState(null);\n  \n\n  useEffect(() => {\n    personService\n    .getAll()\n    .then(initialPersons => {\n      console.log('initialpersons', initialPersons)\n      setPersons(initialPersons)\n    })\n    .catch(error => {\n      console.log('fetchdata', error)\n    })\n  }, [])\n\n  console.log('render', persons.length, 'persons')\n\n    \n\n  const addName = (event) => {\n    event.preventDefault();\n    console.log(\"button clicked\", event.target);\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    };\n    if (!checkDuplicate(personObject)){\n      console.log('personObject',personObject)\n\n      personService\n      .create(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName(\"\");\n        setNewNumber('');\n        setMessageStyle(\"success\");\n        setMessage(`Added ${newName} to the phonebook`);\n        setTimeout(() => {setMessage(null)}, 3000);\n      })\n      .catch(error => {\n        console.log('addName', error)\n      })\n    }\n\n    \n    console.log(\"persons\", persons);\n  };\n\n  \n  \n\n  const handleNewName = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilter = (event) => {\n    setShowAll(event.target.value)\n  }\n\n  const checkDuplicate = (props) => {\n    console.log(\"checkDuplicate\", props);\n    console.log('duplicate persons', persons)\n    const updatedPerson = persons.find(p => p.name.toLowerCase()  === props.name.toLowerCase()) \n    if (updatedPerson) {\n      if(window.confirm(`${props.name} is already added to phonebook, replace the old number with a new one?`)) {\n        const id = updatedPerson.id\n        const changedPerson = {...updatedPerson, number: props.number}\n\n        personService\n        .update(id, changedPerson)\n        .then(returnedPerson => {setPersons(persons.map(p => p.id !== id ? p : returnedPerson))\n          setNewName(\"\");\n          setNewNumber('');\n          setMessageStyle(\"success\")\n          setMessage(`Changed ${changedPerson.name}'s number to ${changedPerson.number}`)\n          setTimeout(() => {setMessage(null)}, 3000)\n        })\n        .catch(error => {\n          console.log('failed to update', error)\n      })\n      } \n    } else {\n        setNewName(\"\");\n        setNewNumber('');\n    }\n    return (updatedPerson === undefined) ? false : true \n  };\n\n\n \n\n  const contactsToShow = persons.filter(person => person.name.toLowerCase().includes(`${showAll}`.toLowerCase()))\n\n  const handleRemove = (id) => {\n    console.log('handleREmove', id)\n    const person = persons.filter(p => p.id === id)\n    console.log('persons', persons)\n    console.log('person', person[0].name)\n    \n    if(window.confirm(`Delete ${person[0].name}?`)) {\n      personService\n      .remove(id)\n      .then(() => {\n        setPersons(persons.filter(person => person.id !== id))\n      })\n      .catch(error => {\n        console.log('error removing', error);\n        setMessageStyle(\"error\");\n        setMessage(`Information of ${person[0].name} has already been removed from the server`);\n        setTimeout(() => {setMessage(null)}, 3000);\n        setPersons(persons.filter(p => p.id !== id));\n        \n      })\n    };\n  \n  } \n  \n  \n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} messageStyle={messageStyle}/>\n      <Filter showAll={showAll} handleFilter={handleFilter} />\n      <h2>Add new contact</h2>\n      <PersonForm newName={newName} newNumber={newNumber} addName={addName} handleNewName={handleNewName} handleNewNumber={handleNewNumber} />\n      <h2>Numbers</h2>\n      <Persons contactsToShow={contactsToShow} handleRemove={handleRemove} />\n      \n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}